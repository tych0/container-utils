#!/bin/bash

set -e
set -x

series=xenial

hostprefix=dev

# for whatever reason, avahi seems to not work in between vms
LXD1=$(avahi-resolve -n ${hostprefix}.local -4 | cut -f2)
LXD2=$(avahi-resolve -n ${hostprefix}2.local -4 | cut -f2)

export GOPATH=/home/ubuntu/packages/go
export LXD_DIR=/var/lib/lxd

function btrfs_init
{
  host=$1
  ssh $host truncate -s 100G /tmp/lxd.btrfs
  ssh $host mkfs.btrfs /tmp/lxd.btrfs
  ssh $host sudo mkdir -p "${LXD_DIR}"
  ssh $host sudo mount -o loop /tmp/lxd.btrfs "${LXD_DIR}"
}

function lvm_init
{
  host=$1
  ssh $host sudo apt install thin-provisioning-tools lvm2
  ssh $host truncate -s 40G /tmp/lxd.lvm
  pvloopdev=$(ssh $host sudo losetup --show -f /tmp/lxd.lvm)
  ssh $host sudo pvcreate "${pvloopdev}"
  ssh $host sudo vgcreate lxd "${pvloopdev}"
}

function bootstrap_lxd
{
  host=$1
  remote=$2

  if [ $(lxc list $remote: | grep -c "\<unpriv\>") -eq "1" ]; then
    lxc stop --force $remote:unpriv || true
  fi

  # restart everything if this is a development LXD
  if [ "$(ssh $host which lxd)" != "/usr/bin/lxd" ]; then
    ssh $host sudo /usr/lib/x86_64-linux-gnu/lxc/lxc-net start || true
    ssh $host sudo killall -9 lxd || true

    # btrfs?
    # btrfs_init $host

    # lvm? also uncomment below
    # lvm_init $host

    ssh $host sudo rm $LXD_DIR/unix.socket || true
    ssh $host "sudo -E $GOPATH/bin/lxd --group sudo --debug &> /tmp/lxd$port &"

    while ssh $host "test ! -e $LXD_DIR/unix.socket"; do
      sleep 0.5
    done

    # more lvm
    # ssh $host lxc config set storage.lvm_volume_size 10GiB
    # ssh $host lxc config set storage.lvm_vg_name lxd
  fi

  # zfs?
  # ssh $host sudo $GOPATH/bin/lxd init --auto --storage-backend zfs --storage-pool lxd --storage-create-loop 5

  ssh $host sudo usermod -a -G lxd ubuntu || true
  ssh $host lxc config set core.trust_password foo
  ssh $host lxc config set core.https_address 0.0.0.0:8443

  lxc remote remove $remote || true
  lxc remote add $remote $host --accept-certificate --password=foo

  ssh $host lxc network create lxdbr0 "ipv4.address=10.42.69.1/24" "ipv4.nat=true" "ipv6.address=none"
  ssh $host lxc network attach-profile lxdbr0 default eth0

  if [ "$(lxc image list $remote: | grep -c $series)" -eq "0" ]; then
    lxc image copy ubuntu:$series $remote: --alias $series --auto-update
  fi
}

function setup_container
{
  container=$1

  if [ "$(lxc list host1: | grep -c "\<$container\>")" -eq "0" ] &&
     [ "$(lxc list host2: | grep -c "\<$container\>")" -eq "0" ]; then
    lxc init host1:$series host1:$container
  fi
}

bootstrap_lxd $LXD1 host1
bootstrap_lxd $LXD2 host2

setup_container unpriv
